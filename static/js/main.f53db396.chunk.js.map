{"version":3,"sources":["component/Navbar.js","component/Textform.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","prototype","PropTypes","string","about","defaultProps","Alert","alert","word","lower","charAt","slice","capitalize","msg","data-bs-dismiss","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","component_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f53db396.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/*\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.about}\r\n              </Link>\r\n            </li>*/}\r\n          </ul>\r\n  {/*        <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n  </button>  \r\n  </form>  */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              onClick={props.toggleMode}\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div> \r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.prototype = { title: PropTypes.string, about: PropTypes.string };\r\n\r\nNavbar.defaultProps = {\r\n  title: \"set title here \",\r\n  about: \" set about us \",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const handleUpClick = () => {\r\n    console.log(\"upper case is clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase\", \"success\")\r\n  };\r\n  const handleLoClick = () => {\r\n    console.log(\"lower case is clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase\", \"success\")\r\n  };\r\n  const handleClearClick = () => {\r\n    console.log(\"lower case is clicked\" + text);\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Test is cleared\", \"success\")\r\n  };\r\n  const handlecopyClick = () => {\r\n    console.log(\"copy text is clicked\"  );\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Test is copied\", \"success\")\r\n  };\r\n  const handleremoveClick = () => {\r\n    console.log(\"Remove Extra space is clicked\" + text);\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Spaces is removed\", \"success\")\r\n  };\r\n  const handleOnChange = (event) => {\r\n    console.log(\"onchange\");\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"Enter the text\");\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color: props.mode === 'dark'?'white':'#1a1234' }}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{backgroundColor: props.mode === 'dark'?'grey':'white', color: props.mode === 'dark'?'white':'#1a1234' }}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n          <button\r\n            className=\"btn btn-primary my-3 mx-3 \"\r\n            onClick={handleUpClick}\r\n          >\r\n            Convert to uppercase\r\n          </button>\r\n          <button className=\"btn btn-primary my-3\" onClick={handleLoClick}>\r\n            Convert to lowercase\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary my-3 mx-3 \"\r\n            onClick={handleClearClick}\r\n          >\r\n            Clear text\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary my-2 mx-3 \"\r\n            onClick={handlecopyClick}\r\n          >\r\n            copy text\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary my-2 mx-3 \"\r\n            onClick={handleremoveClick}\r\n          >\r\n            Remove extra space\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\" style={{color: props.mode === 'dark'?'white':'#1a1234' }}>\r\n        <h1>Your text summary</h1>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} minutes to read </p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something above in the box to preview\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize=(word)=>{\r\n      const lower= word.toLowerCase();\r\n      return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n \r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn-close\"\r\n        data-bs-dismiss=\"alert\"\r\n        aria-label=\"Close\"\r\n      ></button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\r\n//import About from \"./component/About\";\r\nimport Navbar from \"./component/Navbar\";\r\nimport Textform from \"./component/Textform\";\r\nimport React, { useState } from \"react\";\r\nimport Alert from \"./component/Alert\";\r\n//import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\");\r\n  const [alert, setAlert] = useState(null);\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type,\r\n    });\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1500);\r\n  };\r\n  const toggleMode = () => {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"#1a1234\";\r\n      showAlert(\"Dark mode has been enabled\", \"success\");\r\n    } else {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      showAlert(\"Light mode has been enabled\", \"success\");\r\n    }\r\n  };\r\n  return (\r\n    <>{\r\n    /*\r\n      <Router>\r\n    */}\r\n        <Navbar\r\n          title=\"TextUtils\"\r\n          about=\"About us\"\r\n          mode={mode}\r\n          toggleMode={toggleMode}\r\n        />\r\n        <Alert alert={alert} />\r\n        <div className=\"container\">\r\n         {/* <Routes>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              element={\r\n                />\r\n              */}\r\n               <Textform\r\n                  showAlert={showAlert}\r\n                  heading=\"Enter the text \"\r\n                  mode={mode}\r\n                />\r\n           \r\n             </div>\r\n            {/*\r\n            <Route exact path=\"/about\" element={<About />} />\r\n          </Routes>\r\n       \r\n      </Router>\r\n      */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}